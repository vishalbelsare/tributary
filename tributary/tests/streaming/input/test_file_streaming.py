import os
import os.path
import time
import tributary.streaming as ts


_DATA = [
    {"A": 0.5202935277, "B": -0.1342029162, "C": -0.4063935124, "D": 0.7683930309},
    {"A": 2.4391663877, "B": -0.4531601906, "C": 0.5504786851, "D": 0.325227506},
    {"A": 0.3086543475, "B": -0.4699086094, "C": 0.030693103, "D": 1.4332804114},
    {"A": 1.0297827499, "B": -1.5501301415, "C": 2.3629809104, "D": 1.6914496686},
    {"A": -0.884150846, "B": -0.103603736, "C": -2.0112105601, "D": 0.4678144406},
    {"A": -0.5774053104, "B": 0.3085597903, "C": 0.4117180955, "D": -1.2195844306},
    {"A": 0.3986720589, "B": -0.7892302474, "C": -0.6073367673, "D": -0.0705578578},
    {"A": 0.6379109681, "B": -2.8962345925, "C": 0.5189689327, "D": 0.4448039862},
    {"A": 0.4370833908, "B": 0.7522062612, "C": 0.0451172889, "D": -0.8192326352},
    {"A": 1.1929752083, "B": 0.0977595985, "C": 0.4772077299, "D": -0.148081604},
]


class TestFile:
    def setup_method(self):
        time.sleep(0.5)

    def test_file(self):
        file = os.path.abspath(
            os.path.join(os.path.dirname(__file__), "test_file_data.json")
        )

        out = ts.Print(ts.FileSource(filename=file, json=False))
        assert ts.run(out) == [
            '{"A":0.5202935277,"B":-0.1342029162,"C":-0.4063935124,"D":0.7683930309}\n',
            '{"A":2.4391663877,"B":-0.4531601906,"C":0.5504786851,"D":0.325227506}\n',
            '{"A":0.3086543475,"B":-0.4699086094,"C":0.030693103,"D":1.4332804114}\n',
            '{"A":1.0297827499,"B":-1.5501301415,"C":2.3629809104,"D":1.6914496686}\n',
            '{"A":-0.884150846,"B":-0.103603736,"C":-2.0112105601,"D":0.4678144406}\n',
            '{"A":-0.5774053104,"B":0.3085597903,"C":0.4117180955,"D":-1.2195844306}\n',
            '{"A":0.3986720589,"B":-0.7892302474,"C":-0.6073367673,"D":-0.0705578578}\n',
            '{"A":0.6379109681,"B":-2.8962345925,"C":0.5189689327,"D":0.4448039862}\n',
            '{"A":0.4370833908,"B":0.7522062612,"C":0.0451172889,"D":-0.8192326352}\n',
            '{"A":1.1929752083,"B":0.0977595985,"C":0.4772077299,"D":-0.148081604}',
        ]

    def test_file_json(self):
        file = os.path.abspath(
            os.path.join(os.path.dirname(__file__), "test_file_data.json")
        )

        out = ts.Print(ts.FileSource(filename=file, json=True))
        assert ts.run(out) == _DATA

    def test_file_csv(self):
        file = os.path.abspath(
            os.path.join(os.path.dirname(__file__), "test_file_data.csv")
        )

        out = ts.FileSource(filename=file, csv=True).print()
        assert ts.run(out) == [
            ["index", "A", "B", "C", "D"],
            [
                "2000-01-03",
                "0.026648148571715664",
                "-0.7590154652035094",
                "-0.6494555758721114",
                "1.0184532376246929",
            ],
            [
                "2000-01-04",
                "0.2897691505750989",
                "1.3344806935428815",
                "-1.9651363204561283",
                "-1.6548605987228506",
            ],
            [
                "2000-01-05",
                "-0.5199971756398427",
                "-0.6066183328449831",
                "0.27484079250032406",
                "-0.5610753099845647",
            ],
            [
                "2000-01-06",
                "-0.7126635676927439",
                "1.3122428262804113",
                "2.0336462799165558",
                "0.2175065284752955",
            ],
            [
                "2000-01-07",
                "-0.214971513714637",
                "1.4109329849564642",
                "-0.5792064572755115",
                "0.8086350446039877",
            ],
            [
                "2000-01-10",
                "-0.9888172578604721",
                "-0.007570311807930511",
                "1.083522227060552",
                "0.04844857753597059",
            ],
            [
                "2000-01-11",
                "-0.6152506968139281",
                "-0.6379012668254349",
                "-0.5545751885777795",
                "0.5088485784751581",
            ],
            [
                "2000-01-12",
                "1.273575794521754",
                "0.35551042218088097",
                "0.5514389291813603",
                "-0.22008717208580486",
            ],
            [
                "2000-01-13",
                "-1.077382391129198",
                "0.32078439306326434",
                "0.19722919088791147",
                "1.8449109581947052",
            ],
            [
                "2000-01-14",
                "-1.5834800188615588",
                "1.7435795115972916",
                "0.7906579301597301",
                "-2.7621283579713527",
            ],
        ]
